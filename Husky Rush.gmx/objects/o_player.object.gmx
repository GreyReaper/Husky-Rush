<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create inventory
for(var i = 0; i &lt; 3; i++){
    inventory[i,0] = 0; //status. Initial set to 0 - not found
    inventory[i,1] = "generic_name"; //item name
    inventory[i,2] = "generic_target"; //target name
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set speed and direction when key pressed
if (g_keyDirectionIsPressed)
{
    speed = 5;
    if (g_keyDirection == 0)   direction = 0;
    if (g_keyDirection == 90)  direction = 90;
    if (g_keyDirection == 180) direction = 180;
    if (g_keyDirection == 270) direction = 270;

    // Or simply... 
    // direction = g_keyDirection;
}

    // Set speed and direction when key released
if (g_keyDirectionIsReleased)
{
    if (g_keyDirection == -1)  speed = 0; // Stop if no direction pressed
    else if (g_keyDirection == 0)   direction = 0;
    else if (g_keyDirection == 90)  direction = 90;
    else if (g_keyDirection == 180) direction = 180;
    else if (g_keyDirection == 270) direction = 270;
}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_collectable">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>o_collectable</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hasKey</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_base_wall">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the HUD (Heads Up Display)


//ui_draw_hearts(32, 48);

_x = 12
_y = 12
_right_inverse_margin = 240;

repeat (lives)
    {
    draw_sprite(heart_full, 0, _x, _y);
    _x += 60;
    }
    
//ui_draw_goals
    var current_position_y = 12;
    var text = "placeholder";

for(var i = 0; i &lt; 3; i++){
    var current_position_x = display_get_width() - _right_inverse_margin;
    
    if(o_player.inventory[i,0] == 0){
        text = "Get " + o_player.inventory[i,1] + " from printer.";
        draw_sprite(ch_key, 0, current_position_x, current_position_y);
        current_position_x += 32 + 12;
        draw_text(current_position_x, current_position_y, text);
    
    } else if (o_player.inventory[i,0] == 1) {
        text = "Take " + o_player.inventory[i,1] + " to " + o_player.inventory[i,2] + ".";
        draw_sprite(ch_key, 0, current_position_x, current_position_y);
        current_position_x += 32 + 12;
        draw_text(current_position_x, current_position_y, text);
    } else if (o_player.inventory[i,0] == 2) {
        text = o_player.inventory[i,1] + " to " + o_player.inventory[i,2] + " complete!";
        draw_sprite(ch_key, 0, current_position_x, current_position_y);
        current_position_x += 32 + 12;
        draw_text(current_position_x, current_position_y, text);
    }
    
    
    current_position_y = 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-16,-16</point>
    <point>16,-16</point>
    <point>16,16</point>
    <point>-16,16</point>
  </PhysicsShapePoints>
</object>
